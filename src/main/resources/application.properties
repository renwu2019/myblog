server.port=80

# datasource配置
spring.datasource.url=jdbc:mysql://localhost:3306/myblog?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=30000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.pool-name=hikariCP
#spring.datasource.hikari.connection-test-query=SELECT 1

# mybatis配置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# thymeleaf配置
spring.thymeleaf.cache=false
#spring.thymeleaf.mode=LEGACYHTML5
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html

# logging配置
logging.config=classpath:log/logback-spring.xml

# 环境配置
spring.profiles.active=dev

# 转发头
# spring低版本这样配置
#server.tomcat.remote_ip_header=x-forwarded-for
#server.tomcat.protocol_header=x-forwarded-proto
#server.tomcat.port-header=X-Forwarded-Port
#server.use-forward-headers=true

# springboot2.2
#server.tomcat.redirect-context-root=false
# 通过调用sendRedirect生成的HTTP 1.1和更高版本的位置标头是使用相对还是绝对重定向
# 这里需要使用相对，否则重定向时，使用http://
server.tomcat.use-relative-redirects=true
server.tomcat.remoteip.remote-ip-header=X-FORWARDED-FOR
server.tomcat.remoteip.protocol-header=X-Forwarded-Proto
#https://stackoverflow.com/questions/68318269/spring-server-forward-headers-strategy-native-vs-framework
#server.forward-headers-strategy=none
#server.tomcat.remoteip.port-header=X-Forwarded-Port
#server.tomcat.remoteip.host-header=X-Forwarded-Host
#server.tomcat.remoteip.internal-proxies=192\\.168\\.\\d{1,3}\\.\\d{1,3}
#server.tomcat.remoteip.protocol-header-https-value=https
# NONE：完全禁止使用转发头
#NATIVE,  // 强制使用header.x-forwarded-for
#FRAMEWORK, // 强制使用remote_addr
#NONE // 默认（普通运行使用remote_addr，云平台运行使用header.x-forwarded-for）

# 文件大小限制
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

